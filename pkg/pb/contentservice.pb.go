// Code generated by protoc-gen-go.
// source: github.com/divyag9/gomodel/pkg/pb/contentservice.proto
// DO NOT EDIT!

/*
Package contentservice is a generated protocol buffer package.

It is generated from these files:
	github.com/divyag9/gomodel/pkg/pb/contentservice.proto

It has these top-level messages:
	ImageIdsRequest
	OrderNumberRequest
	ListResponse
	ImageDetail
*/
package contentservice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ImageIdsRequest sent to the server
type ImageIdsRequest struct {
	ImageIds []int64 `protobuf:"varint,1,rep,packed,name=imageIds" json:"imageIds,omitempty"`
}

func (m *ImageIdsRequest) Reset()                    { *m = ImageIdsRequest{} }
func (m *ImageIdsRequest) String() string            { return proto.CompactTextString(m) }
func (*ImageIdsRequest) ProtoMessage()               {}
func (*ImageIdsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ImageIdsRequest) GetImageIds() []int64 {
	if m != nil {
		return m.ImageIds
	}
	return nil
}

// OrderNumberRequest sent to the server
type OrderNumberRequest struct {
	OrderNumber int64 `protobuf:"varint,1,opt,name=orderNumber" json:"orderNumber,omitempty"`
}

func (m *OrderNumberRequest) Reset()                    { *m = OrderNumberRequest{} }
func (m *OrderNumberRequest) String() string            { return proto.CompactTextString(m) }
func (*OrderNumberRequest) ProtoMessage()               {}
func (*OrderNumberRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *OrderNumberRequest) GetOrderNumber() int64 {
	if m != nil {
		return m.OrderNumber
	}
	return 0
}

// ListResponse sent from the server
type ListResponse struct {
	ImageDetails []*ImageDetail `protobuf:"bytes,1,rep,name=imageDetails" json:"imageDetails,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListResponse) GetImageDetails() []*ImageDetail {
	if m != nil {
		return m.ImageDetails
	}
	return nil
}

type ImageDetail struct {
	ImageId                int64                      `protobuf:"varint,1,opt,name=imageId" json:"imageId,omitempty"`
	ImageFileName          string                     `protobuf:"bytes,2,opt,name=imageFileName" json:"imageFileName,omitempty"`
	ScanDate               *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=scanDate" json:"scanDate,omitempty"`
	ImageUTCDate           *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=imageUTCDate" json:"imageUTCDate,omitempty"`
	ImageTakenDate         *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=imageTakenDate" json:"imageTakenDate,omitempty"`
	DateCreated            *google_protobuf.Timestamp `protobuf:"bytes,7,opt,name=dateCreated" json:"dateCreated,omitempty"`
	OrderNumber            int64                      `protobuf:"varint,8,opt,name=orderNumber" json:"orderNumber,omitempty"`
	Archived               string                     `protobuf:"bytes,9,opt,name=archived" json:"archived,omitempty"`
	Category               string                     `protobuf:"bytes,10,opt,name=category" json:"category,omitempty"`
	ContractorId           int64                      `protobuf:"varint,11,opt,name=contractorId" json:"contractorId,omitempty"`
	DateModified           *google_protobuf.Timestamp `protobuf:"bytes,12,opt,name=dateModified" json:"dateModified,omitempty"`
	DeptCode               string                     `protobuf:"bytes,13,opt,name=deptCode" json:"deptCode,omitempty"`
	DescPrefix             string                     `protobuf:"bytes,14,opt,name=descPrefix" json:"descPrefix,omitempty"`
	DescText               string                     `protobuf:"bytes,15,opt,name=descText" json:"descText,omitempty"`
	FileSize               int32                      `protobuf:"varint,16,opt,name=fileSize" json:"fileSize,omitempty"`
	ImageHeight            int32                      `protobuf:"varint,17,opt,name=imageHeight" json:"imageHeight,omitempty"`
	ImageWidth             int32                      `protobuf:"varint,18,opt,name=imageWidth" json:"imageWidth,omitempty"`
	ImageType              int32                      `protobuf:"varint,19,opt,name=imageType" json:"imageType,omitempty"`
	ImageRotated           bool                       `protobuf:"varint,20,opt,name=imageRotated" json:"imageRotated,omitempty"`
	ReleaseDate            *google_protobuf.Timestamp `protobuf:"bytes,21,opt,name=releaseDate" json:"releaseDate,omitempty"`
	ThumbnailSize          int32                      `protobuf:"varint,22,opt,name=thumbnailSize" json:"thumbnailSize,omitempty"`
	MimeType               string                     `protobuf:"bytes,23,opt,name=mimeType" json:"mimeType,omitempty"`
	WebFileName            string                     `protobuf:"bytes,24,opt,name=webFileName" json:"webFileName,omitempty"`
	GeneratedImageFilePath string                     `protobuf:"bytes,25,opt,name=generatedImageFilePath" json:"generatedImageFilePath,omitempty"`
	Guid                   string                     `protobuf:"bytes,26,opt,name=guid" json:"guid,omitempty"`
}

func (m *ImageDetail) Reset()                    { *m = ImageDetail{} }
func (m *ImageDetail) String() string            { return proto.CompactTextString(m) }
func (*ImageDetail) ProtoMessage()               {}
func (*ImageDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ImageDetail) GetImageId() int64 {
	if m != nil {
		return m.ImageId
	}
	return 0
}

func (m *ImageDetail) GetImageFileName() string {
	if m != nil {
		return m.ImageFileName
	}
	return ""
}

func (m *ImageDetail) GetScanDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.ScanDate
	}
	return nil
}

func (m *ImageDetail) GetImageUTCDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.ImageUTCDate
	}
	return nil
}

func (m *ImageDetail) GetImageTakenDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.ImageTakenDate
	}
	return nil
}

func (m *ImageDetail) GetDateCreated() *google_protobuf.Timestamp {
	if m != nil {
		return m.DateCreated
	}
	return nil
}

func (m *ImageDetail) GetOrderNumber() int64 {
	if m != nil {
		return m.OrderNumber
	}
	return 0
}

func (m *ImageDetail) GetArchived() string {
	if m != nil {
		return m.Archived
	}
	return ""
}

func (m *ImageDetail) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *ImageDetail) GetContractorId() int64 {
	if m != nil {
		return m.ContractorId
	}
	return 0
}

func (m *ImageDetail) GetDateModified() *google_protobuf.Timestamp {
	if m != nil {
		return m.DateModified
	}
	return nil
}

func (m *ImageDetail) GetDeptCode() string {
	if m != nil {
		return m.DeptCode
	}
	return ""
}

func (m *ImageDetail) GetDescPrefix() string {
	if m != nil {
		return m.DescPrefix
	}
	return ""
}

func (m *ImageDetail) GetDescText() string {
	if m != nil {
		return m.DescText
	}
	return ""
}

func (m *ImageDetail) GetFileSize() int32 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

func (m *ImageDetail) GetImageHeight() int32 {
	if m != nil {
		return m.ImageHeight
	}
	return 0
}

func (m *ImageDetail) GetImageWidth() int32 {
	if m != nil {
		return m.ImageWidth
	}
	return 0
}

func (m *ImageDetail) GetImageType() int32 {
	if m != nil {
		return m.ImageType
	}
	return 0
}

func (m *ImageDetail) GetImageRotated() bool {
	if m != nil {
		return m.ImageRotated
	}
	return false
}

func (m *ImageDetail) GetReleaseDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.ReleaseDate
	}
	return nil
}

func (m *ImageDetail) GetThumbnailSize() int32 {
	if m != nil {
		return m.ThumbnailSize
	}
	return 0
}

func (m *ImageDetail) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *ImageDetail) GetWebFileName() string {
	if m != nil {
		return m.WebFileName
	}
	return ""
}

func (m *ImageDetail) GetGeneratedImageFilePath() string {
	if m != nil {
		return m.GeneratedImageFilePath
	}
	return ""
}

func (m *ImageDetail) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

func init() {
	proto.RegisterType((*ImageIdsRequest)(nil), "contentservice.ImageIdsRequest")
	proto.RegisterType((*OrderNumberRequest)(nil), "contentservice.OrderNumberRequest")
	proto.RegisterType((*ListResponse)(nil), "contentservice.ListResponse")
	proto.RegisterType((*ImageDetail)(nil), "contentservice.ImageDetail")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ContentService service

type ContentServiceClient interface {
	// Returns ImageDetail records for the requested imageids
	ListByImageIds(ctx context.Context, in *ImageIdsRequest, opts ...grpc.CallOption) (*ListResponse, error)
	// Returns Imagedetail records for the requested ordernumber
	ListByOrderNumber(ctx context.Context, in *OrderNumberRequest, opts ...grpc.CallOption) (*ListResponse, error)
}

type contentServiceClient struct {
	cc *grpc.ClientConn
}

func NewContentServiceClient(cc *grpc.ClientConn) ContentServiceClient {
	return &contentServiceClient{cc}
}

func (c *contentServiceClient) ListByImageIds(ctx context.Context, in *ImageIdsRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := grpc.Invoke(ctx, "/contentservice.ContentService/ListByImageIds", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ListByOrderNumber(ctx context.Context, in *OrderNumberRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := grpc.Invoke(ctx, "/contentservice.ContentService/ListByOrderNumber", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ContentService service

type ContentServiceServer interface {
	// Returns ImageDetail records for the requested imageids
	ListByImageIds(context.Context, *ImageIdsRequest) (*ListResponse, error)
	// Returns Imagedetail records for the requested ordernumber
	ListByOrderNumber(context.Context, *OrderNumberRequest) (*ListResponse, error)
}

func RegisterContentServiceServer(s *grpc.Server, srv ContentServiceServer) {
	s.RegisterService(&_ContentService_serviceDesc, srv)
}

func _ContentService_ListByImageIds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageIdsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ListByImageIds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contentservice.ContentService/ListByImageIds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ListByImageIds(ctx, req.(*ImageIdsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ListByOrderNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ListByOrderNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contentservice.ContentService/ListByOrderNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ListByOrderNumber(ctx, req.(*OrderNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "contentservice.ContentService",
	HandlerType: (*ContentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListByImageIds",
			Handler:    _ContentService_ListByImageIds_Handler,
		},
		{
			MethodName: "ListByOrderNumber",
			Handler:    _ContentService_ListByOrderNumber_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/divyag9/gomodel/pkg/pb/contentservice.proto",
}

func init() {
	proto.RegisterFile("github.com/divyag9/gomodel/pkg/pb/contentservice.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 658 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xdf, 0x6f, 0xd3, 0x3a,
	0x14, 0xbe, 0xb9, 0xfb, 0xd5, 0xb9, 0x5d, 0x77, 0xe7, 0x7b, 0xef, 0x30, 0x65, 0x82, 0x28, 0xe2,
	0xa1, 0x2f, 0x34, 0xd2, 0x90, 0x2a, 0x21, 0x10, 0x48, 0xeb, 0x84, 0xa8, 0x04, 0xdb, 0xc8, 0x8a,
	0xf6, 0xec, 0xc4, 0xa7, 0xa9, 0xb5, 0x24, 0x0e, 0x8e, 0x33, 0x56, 0xfe, 0x36, 0xfe, 0x23, 0xfe,
	0x09, 0x64, 0xbb, 0x69, 0x93, 0x0e, 0xd4, 0xb7, 0x7c, 0xdf, 0xf9, 0xce, 0x39, 0xf6, 0x77, 0xe2,
	0x83, 0x86, 0x31, 0x57, 0xb3, 0x32, 0x1c, 0x44, 0x22, 0xf5, 0x19, 0xbf, 0x9b, 0xd3, 0xf8, 0x95,
	0x1f, 0x8b, 0x54, 0x30, 0x48, 0xfc, 0xfc, 0x36, 0xf6, 0xf3, 0xd0, 0x8f, 0x44, 0xa6, 0x20, 0x53,
	0x05, 0xc8, 0x3b, 0x1e, 0xc1, 0x20, 0x97, 0x42, 0x09, 0xdc, 0x6d, 0xb2, 0xbd, 0xd7, 0xb5, 0x3a,
	0xb1, 0x48, 0x68, 0x16, 0xfb, 0x46, 0x18, 0x96, 0x53, 0x3f, 0x57, 0xf3, 0x1c, 0x0a, 0x5f, 0xf1,
	0x14, 0x0a, 0x45, 0xd3, 0x7c, 0xf5, 0x65, 0x8b, 0x79, 0x2f, 0xd0, 0xe1, 0x38, 0xa5, 0x31, 0x8c,
	0x59, 0x11, 0xc0, 0xd7, 0x12, 0x0a, 0x85, 0x7b, 0xa8, 0xc5, 0x17, 0x14, 0x71, 0xdc, 0xad, 0xfe,
	0x56, 0xb0, 0xc4, 0xde, 0x10, 0xe1, 0x4b, 0xc9, 0x40, 0x5e, 0x94, 0x69, 0x08, 0xb2, 0xca, 0x70,
	0x51, 0x5b, 0xac, 0x58, 0xe2, 0xb8, 0x4e, 0x7f, 0x2b, 0xa8, 0x53, 0xde, 0x25, 0xea, 0x7c, 0xe4,
	0x85, 0x0a, 0xa0, 0xc8, 0x45, 0x56, 0x00, 0x7e, 0x87, 0x3a, 0xa6, 0xe6, 0x39, 0x28, 0xca, 0x13,
	0xdb, 0xa7, 0x7d, 0xfa, 0x64, 0xb0, 0x76, 0xe1, 0xf1, 0x4a, 0x13, 0x34, 0x12, 0xbc, 0x9f, 0x7b,
	0xa8, 0x5d, 0x8b, 0x62, 0x82, 0xf6, 0x16, 0x87, 0x5c, 0xb4, 0xaf, 0x20, 0x7e, 0x8e, 0x0e, 0xcc,
	0xe7, 0x7b, 0x9e, 0xc0, 0x05, 0x4d, 0x81, 0xfc, 0xed, 0x3a, 0xfd, 0xfd, 0xa0, 0x49, 0xe2, 0x21,
	0x6a, 0x15, 0x11, 0xcd, 0xce, 0xa9, 0x02, 0xb2, 0xed, 0x3a, 0xfd, 0xf6, 0x69, 0x6f, 0x10, 0x0b,
	0x11, 0x27, 0x0b, 0xd7, 0xc3, 0x72, 0x3a, 0x98, 0x54, 0xde, 0x05, 0x4b, 0x2d, 0x7e, 0xbb, 0xb8,
	0xc8, 0x97, 0xc9, 0xc8, 0xe4, 0xee, 0x6c, 0xcc, 0x6d, 0xe8, 0xf1, 0x19, 0xea, 0x1a, 0x3c, 0xa1,
	0xb7, 0x60, 0xbb, 0xef, 0x6e, 0xac, 0xb0, 0x96, 0x81, 0xdf, 0xa0, 0x36, 0xa3, 0x0a, 0x46, 0x12,
	0xa8, 0x02, 0x46, 0xf6, 0x36, 0x16, 0xa8, 0xcb, 0xd7, 0x87, 0xd7, 0x7a, 0x30, 0x3c, 0xfd, 0x43,
	0x50, 0x19, 0xcd, 0xf8, 0x1d, 0x30, 0xb2, 0x6f, 0xcc, 0x5b, 0x62, 0x1d, 0x8b, 0xa8, 0x82, 0x58,
	0xc8, 0x39, 0x41, 0x36, 0x56, 0x61, 0xec, 0xa1, 0x8e, 0x9e, 0xa7, 0xa4, 0x91, 0x12, 0x72, 0xcc,
	0x48, 0xdb, 0x94, 0x6e, 0x70, 0xda, 0x3f, 0x7d, 0x98, 0x4f, 0x82, 0xf1, 0x29, 0x07, 0x46, 0x3a,
	0x9b, 0xfd, 0xab, 0xeb, 0x75, 0x7f, 0x06, 0xb9, 0x1a, 0x09, 0x06, 0xe4, 0xc0, 0xf6, 0xaf, 0x30,
	0x7e, 0x8a, 0x10, 0x83, 0x22, 0xba, 0x92, 0x30, 0xe5, 0xf7, 0xa4, 0x6b, 0xa2, 0x35, 0xc6, 0xe6,
	0x16, 0xd1, 0x04, 0xee, 0x15, 0x39, 0xac, 0x72, 0x2d, 0xd6, 0xb1, 0x29, 0x4f, 0xe0, 0x9a, 0x7f,
	0x07, 0xf2, 0x8f, 0xeb, 0xf4, 0x77, 0x82, 0x25, 0xd6, 0x8e, 0x99, 0x09, 0x7c, 0x00, 0x1e, 0xcf,
	0x14, 0x39, 0x32, 0xe1, 0x3a, 0xa5, 0x3b, 0x1b, 0x78, 0xc3, 0x99, 0x9a, 0x11, 0x6c, 0x04, 0x35,
	0x06, 0x9f, 0xa0, 0x7d, 0x3b, 0xc3, 0x79, 0x0e, 0xe4, 0x5f, 0x13, 0x5e, 0x11, 0xda, 0x37, 0x03,
	0x02, 0xa1, 0xcc, 0x40, 0xff, 0x73, 0x9d, 0x7e, 0x2b, 0x68, 0x70, 0x7a, 0xe6, 0x12, 0x12, 0xa0,
	0x05, 0x98, 0x9f, 0xe6, 0xff, 0xcd, 0x33, 0xaf, 0xc9, 0xf5, 0x9b, 0x50, 0xb3, 0x32, 0x0d, 0x33,
	0xca, 0x13, 0x73, 0xc5, 0x63, 0x73, 0x86, 0x26, 0xa9, 0x3d, 0x48, 0x79, 0x6a, 0x0f, 0xf9, 0xc8,
	0xfa, 0x53, 0x61, 0xed, 0xc1, 0x37, 0x08, 0x97, 0x6f, 0x8a, 0x98, 0x70, 0x9d, 0xc2, 0x43, 0x74,
	0x1c, 0x43, 0x06, 0x52, 0x1f, 0x77, 0x5c, 0xbd, 0xb5, 0x2b, 0xaa, 0x66, 0xe4, 0xb1, 0x11, 0xff,
	0x21, 0x8a, 0x31, 0xda, 0x8e, 0x4b, 0xce, 0x48, 0xcf, 0xa8, 0xcc, 0xf7, 0xe9, 0x0f, 0x07, 0x75,
	0x47, 0x76, 0x35, 0x5c, 0xdb, 0xd5, 0x80, 0x3f, 0xa3, 0xae, 0xde, 0x28, 0x67, 0xf3, 0x6a, 0x7d,
	0xe1, 0x67, 0xbf, 0xdd, 0x1e, 0xab, 0xc5, 0xd6, 0x3b, 0x59, 0x17, 0xd4, 0x57, 0x92, 0xf7, 0x17,
	0xbe, 0x41, 0x47, 0xb6, 0x64, 0x6d, 0xc5, 0x61, 0x6f, 0x3d, 0xe9, 0xe1, 0xfe, 0xdb, 0x54, 0x38,
	0xdc, 0x35, 0xf3, 0x78, 0xf9, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x67, 0x4a, 0x84, 0x36, 0xf2, 0x05,
	0x00, 0x00,
}
